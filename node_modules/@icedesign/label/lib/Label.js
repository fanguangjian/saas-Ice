'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var IceLabel = (_temp = _class = function (_PureComponent) {
  _inherits(IceLabel, _PureComponent);

  function IceLabel() {
    _classCallCheck(this, IceLabel);

    return _possibleConstructorReturn(this, _PureComponent.apply(this, arguments));
  }

  IceLabel.prototype.render = function render() {
    var _props = this.props,
        style = _props.style,
        className = _props.className,
        status = _props.status,
        children = _props.children,
        inverse = _props.inverse;

    return _react2.default.createElement(
      'span',
      {
        style: style,
        className: 'ice-label ice-label-' + status + ' ' + (!inverse ? 'ice-label-no-inverse' : '') + ' ' + className
      },
      children
    );
  };

  return IceLabel;
}(_react.PureComponent), _class.displayName = 'IceLabel', _class.propTypes = {
  /**
   * 当前要表达的状态
   */
  status: _propTypes2.default.oneOf(['default', 'primary', 'success', 'info', 'warning', 'danger']),
  className: _propTypes2.default.string,
  style: _propTypes2.default.object,
  /**
   * 是否反转颜色
   */
  inverse: _propTypes2.default.bool
}, _class.defaultProps = {
  inverse: true,
  status: 'default',
  className: '',
  style: {}
}, _temp);
exports.default = IceLabel;
module.exports = exports['default'];